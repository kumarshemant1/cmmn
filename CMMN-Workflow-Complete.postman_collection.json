{
	"info": {
		"name": "CMMN Workflow API - Complete",
		"description": "Complete API collection for CMMN Workflow Service with automated scheduling, sequential task management, in-memory CMMN deployment, and file operations",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		},
		{
			"key": "caseInstanceId",
			"value": ""
		},
		{
			"key": "flowableTaskId",
			"value": ""
		},
		{
			"key": "taskMetadataId",
			"value": ""
		}
	],
	"item": [
		{
			"name": "1. Workflow Setup",
			"item": [
				{
					"name": "1.1 Create Parallel Workflow",
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Monthly Report Workflow\",\n  \"frequency\": \"MONTHLY\",\n  \"executionTime\": \"09:00:00\",\n  \"nthWorkingDay\": 4,\n  \"tasks\": [\n    {\"id\": \"1\", \"name\": \"upload T1 file\", \"taskType\": \"UPLOAD\", \"assignee\": \"user1\", \"taskGroup\": \"upload_group\"},\n    {\"id\": \"2\", \"name\": \"upload T2 file\", \"taskType\": \"UPLOAD\", \"assignee\": \"user2\", \"taskGroup\": \"upload_group\"},\n    {\"id\": \"3\", \"name\": \"upload T3 file\", \"taskType\": \"UPLOAD\", \"assignee\": \"user3\", \"taskGroup\": \"upload_group\"},\n    {\"id\": \"4\", \"name\": \"review files\", \"taskType\": \"REVIEW\", \"assignee\": \"reviewer\"},\n    {\"id\": \"5\", \"name\": \"consolidate reports\", \"taskType\": \"CONSOLIDATE\", \"assignee\": \"admin\"}\n  ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/workflows/definition",
							"host": ["{{baseUrl}}"],
							"path": ["api", "workflows", "definition"]
						}
					}
				},
				{
					"name": "1.2 Create Sequential Workflow",
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Individual Task Workflow\",\n  \"frequency\": \"MONTHLY\",\n  \"executionTime\": \"08:11:00\",\n  \"nthWorkingDay\": 9,\n  \"tasks\": [\n    {\"id\": \"1\", \"name\": \"upload T1 file\", \"taskType\": \"UPLOAD\"},\n    {\"id\": \"2\", \"name\": \"upload T2 file\", \"taskType\": \"UPLOAD\"},\n    {\"id\": \"3\", \"name\": \"review files\", \"taskType\": \"REVIEW\"},\n    {\"id\": \"4\", \"name\": \"consolidate reports\", \"taskType\": \"CONSOLIDATE\"}\n  ]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/workflows/definition",
							"host": ["{{baseUrl}}"],
							"path": ["api", "workflows", "definition"]
						}
					}
				},
				{
					"name": "1.3 Update Workflow Definition",
					"request": {
						"method": "PUT",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Updated Workflow Name\",\n  \"frequency\": \"WEEKLY\",\n  \"executionTime\": \"10:00:00\",\n  \"nthWorkingDay\": 2\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/workflows/1/definition",
							"host": ["{{baseUrl}}"],
							"path": ["api", "workflows", "1", "definition"]
						}
					}
				},
				{
					"name": "1.4 Add Dynamic Task to Instance",
					"request": {
						"method": "POST",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Dynamic Upload Task\",\n  \"taskType\": \"UPLOAD\",\n  \"assignee\": \"dynamicuser\",\n  \"taskGroup\": \"dynamic_group\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/tasks/workflow/1/add",
							"host": ["{{baseUrl}}"],
							"path": ["api", "tasks", "workflow", "1", "add"]
						}
					}
				},
				{
					"name": "1.5 Get All Workflow Templates",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/workflows",
							"host": ["{{baseUrl}}"],
							"path": ["api", "workflows"]
						}
					}
				}
			]
		},
		{
			"name": "2. Workflow Execution",
			"item": [
				{
					"name": "2.1 Trigger Workflow",
					"request": {
						"method": "POST",
						"url": {
							"raw": "{{baseUrl}}/api/workflows/1/trigger",
							"host": ["{{baseUrl}}"],
							"path": ["api", "workflows", "1", "trigger"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.caseInstanceId) {",
									"        pm.collectionVariables.set('caseInstanceId', response.caseInstanceId);",
									"        console.log('Captured caseInstanceId:', response.caseInstanceId);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "2.2 Get Workflow Template",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/workflows/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "workflows", "1"]
						}
					}
				},
				{
					"name": "2.3 Get Tasks by Case Instance",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/tasks/case/{{caseInstanceId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "tasks", "case", "{{caseInstanceId}}"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const tasks = pm.response.json();",
									"    if (tasks.length > 0) {",
									"        pm.collectionVariables.set('flowableTaskId', tasks[0].flowableTaskId);",
									"        console.log('Captured flowableTaskId:', tasks[0].flowableTaskId);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "2.4 Get Workflow Instance by Case ID",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/workflows/case/{{caseInstanceId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "workflows", "case", "{{caseInstanceId}}"]
						}
					}
				},
				{
					"name": "2.5 Get Workflow Instances",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/workflows/1/instances",
							"host": ["{{baseUrl}}"],
							"path": ["api", "workflows", "1", "instances"]
						}
					}
				}
			]
		},
		{
			"name": "3. Task Operations",
			"item": [
				{
					"name": "3.1 Get Flowable Task by ID",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/tasks/{{flowableTaskId}}",
							"host": ["{{baseUrl}}"],
							"path": ["api", "tasks", "{{flowableTaskId}}"]
						}
					}
				},
				{
					"name": "3.2 Get TaskMetadata by Flowable ID",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/tasks/flowable/{{flowableTaskId}}/metadata",
							"host": ["{{baseUrl}}"],
							"path": ["api", "tasks", "flowable", "{{flowableTaskId}}", "metadata"]
						}
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const metadata = pm.response.json();",
									"    if (metadata.id) {",
									"        pm.collectionVariables.set('taskMetadataId', metadata.id);",
									"        console.log('Captured taskMetadataId:', metadata.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "3.3 Upload File with Options",
					"request": {
						"method": "POST",
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "retainFile",
									"value": "true",
									"type": "text"
								},
								{
									"key": "keepVersion",
									"value": "true",
									"type": "text"
								},
								{
									"key": "keepHistory",
									"value": "false",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/tasks/{{taskMetadataId}}/upload",
							"host": ["{{baseUrl}}"],
							"path": ["api", "tasks", "{{taskMetadataId}}", "upload"]
						}
					}
				},
				{
					"name": "3.3 Complete Flowable Task",
					"request": {
						"method": "PUT",
						"url": {
							"raw": "{{baseUrl}}/api/tasks/{{flowableTaskId}}/complete",
							"host": ["{{baseUrl}}"],
							"path": ["api", "tasks", "{{flowableTaskId}}", "complete"]
						}
					}
				},
				{
					"name": "3.4 Assign Flowable Task",
					"request": {
						"method": "PUT",
						"url": {
							"raw": "{{baseUrl}}/api/tasks/{{flowableTaskId}}/assign?assignee=newuser",
							"host": ["{{baseUrl}}"],
							"path": ["api", "tasks", "{{flowableTaskId}}", "assign"],
							"query": [
								{
									"key": "assignee",
									"value": "newuser"
								}
							]
						}
					}
				},
				{
					"name": "3.5 Set Task Completion Working Day",
					"request": {
						"method": "PUT",
						"header": [{"key": "Content-Type", "value": "application/json"}],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"completionWorkingDay\": \"2024-01-15T17:00:00\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/tasks/1/completion-date",
							"host": ["{{baseUrl}}"],
							"path": ["api", "tasks", "1", "completion-date"]
						}
					}
				},
				{
					"name": "3.6 Get Flowable Task Status",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/tasks/{{flowableTaskId}}/status",
							"host": ["{{baseUrl}}"],
							"path": ["api", "tasks", "{{flowableTaskId}}", "status"]
						}
					}
				},
				{
					"name": "3.7 Consolidate Files",
					"request": {
						"method": "POST",
						"url": {
							"raw": "{{baseUrl}}/api/tasks/4/consolidate",
							"host": ["{{baseUrl}}"],
							"path": ["api", "tasks", "4", "consolidate"]
						}
					}
				},
				{
					"name": "3.8 Get Active Flowable Tasks",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/tasks/active",
							"host": ["{{baseUrl}}"],
							"path": ["api", "tasks", "active"]
						}
					}
				}
			]
		},
		{
			"name": "4. Utility Operations",
			"item": [
				{
					"name": "4.1 Check Task Completion",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/tasks/{{flowableTaskId}}/completed",
							"host": ["{{baseUrl}}"],
							"path": ["api", "tasks", "{{flowableTaskId}}", "completed"]
						}
					}
				},
				{
					"name": "4.2 Get Task Files",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/tasks/1/files",
							"host": ["{{baseUrl}}"],
							"path": ["api", "tasks", "1", "files"]
						}
					}
				},
				{
					"name": "4.3 Get BusinessFile Details",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/files/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "files", "1"]
						}
					}
				},
				{
					"name": "4.4 Download File",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/files/1/download",
							"host": ["{{baseUrl}}"],
							"path": ["api", "files", "1", "download"]
						}
					}
				},
				{
					"name": "4.5 Get Tasks by Assignee",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/tasks/assignee/user1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "tasks", "assignee", "user1"]
						}
					}
				},
				{
					"name": "4.6 Get CMMN Definition",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/cmmn/1",
							"host": ["{{baseUrl}}"],
							"path": ["api", "cmmn", "1"]
						}
					}
				},
				{
					"name": "4.7 Download CMMN File",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/cmmn/1/download",
							"host": ["{{baseUrl}}"],
							"path": ["api", "cmmn", "1", "download"]
						}
					}
				},
				{
					"name": "4.8 Upload File to Task Metadata",
					"request": {
						"method": "POST",
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "retainFile",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/tasks/1/upload",
							"host": ["{{baseUrl}}"],
							"path": ["api", "tasks", "1", "upload"]
						}
					}
				},
				{
					"name": "4.9 Get Case Instance Info",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/cases/case-instance-id-123/workflow",
							"host": ["{{baseUrl}}"],
							"path": ["api", "cases", "case-instance-id-123", "workflow"]
						}
					}
				},
				{
					"name": "4.10 Get Case Tasks",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/cases/case-instance-id-123/tasks",
							"host": ["{{baseUrl}}"],
							"path": ["api", "cases", "case-instance-id-123", "tasks"]
						}
					}
				},
				{
					"name": "4.11 Get Case Files",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/api/cases/case-instance-id-123/files",
							"host": ["{{baseUrl}}"],
							"path": ["api", "cases", "case-instance-id-123", "files"]
						}
					}
				},
				{
					"name": "4.12 Test All Endpoints Status",
					"request": {
						"method": "GET",
						"url": {
							"raw": "{{baseUrl}}/actuator/health",
							"host": ["{{baseUrl}}"],
							"path": ["actuator", "health"]
						}
					}
				}
			]
		}
	]
}